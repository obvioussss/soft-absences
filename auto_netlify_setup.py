#!/usr/bin/env python3
"""
Configuration automatique Netlify + Resend
"""

import webbrowser
import os
import time
from datetime import datetime

def create_netlify_account():
    """Ouvrir Netlify pour cr√©er un compte"""
    print("üåê Ouverture de Netlify pour cr√©er un compte...")
    webbrowser.open("https://netlify.com")
    
    print("\nüìã Instructions automatiques :")
    print("1. Cliquer 'Sign up'")
    print("2. Choisir 'Sign up with GitHub' (recommand√©)")
    print("3. Autoriser Netlify")
    print("4. Votre compte sera cr√©√© automatiquement")
    
    input("\n‚è≥ Appuyez sur Entr√©e quand votre compte est cr√©√©...")

def deploy_site():
    """D√©ployer le site automatiquement"""
    print("\nüöÄ D√©ploiement automatique du site...")
    
    # V√©rifier que le fichier index.html existe
    if not os.path.exists("index.html"):
        print("‚ùå Fichier index.html non trouv√©")
        return None
    
    print("‚úÖ Fichier index.html trouv√©")
    print("\nüìã Instructions de d√©ploiement :")
    print("1. Sur le dashboard Netlify, cliquer 'New site from Git'")
    print("2. Choisir 'Deploy manually'")
    print("3. Glisser-d√©poser le fichier index.html dans la zone")
    print("4. Attendre le d√©ploiement (30 secondes)")
    
    input("\n‚è≥ Appuyez sur Entr√©e quand le site est d√©ploy√©...")
    
    # Demander le domaine g√©n√©r√©
    domain = input("üåê Entrez votre domaine Netlify (ex: soft-absences-123456.netlify.app) : ").strip()
    return domain

def configure_dns(domain):
    """Configurer les DNS automatiquement"""
    print(f"\nüîß Configuration DNS pour {domain}")
    
    print("\nüìã Instructions DNS :")
    print("1. Aller dans 'Site settings' (ic√¥ne engrenage)")
    print("2. Cliquer 'Domain management'")
    print("3. Cliquer 'DNS'")
    print("4. Cliquer 'Add DNS record'")
    print()
    print("5. Ajouter l'enregistrement SPF :")
    print("   - Type : TXT")
    print("   - Name : @ (ou laissez vide)")
    print("   - Value : v=spf1 include:_spf.resend.com ~all")
    print("   - Cliquer 'Save'")
    
    input("\n‚è≥ Appuyez sur Entr√©e quand l'enregistrement SPF est ajout√©...")
    
    return domain

def add_to_resend(domain):
    """Ajouter le domaine sur Resend"""
    print(f"\nüìß Ajout du domaine {domain} sur Resend...")
    webbrowser.open("https://resend.com/domains")
    
    print("\nüìã Instructions Resend :")
    print("1. Cliquer 'Add Domain'")
    print(f"2. Entrer : {domain}")
    print("3. Cliquer 'Add Domain'")
    print("4. Suivre les instructions de v√©rification")
    print("5. Copier la valeur DKIM fournie")
    
    dkim_value = input("\nüîë Collez la valeur DKIM de Resend : ").strip()
    return dkim_value

def add_dkim_record(domain, dkim_value):
    """Ajouter l'enregistrement DKIM"""
    print(f"\nüîß Ajout de l'enregistrement DKIM pour {domain}")
    
    print("\nüìã Instructions DKIM :")
    print("1. Revenir sur Netlify > 'Site settings' > 'Domain management' > 'DNS'")
    print("2. Cliquer 'Add DNS record'")
    print("3. Ajouter l'enregistrement DKIM :")
    print("   - Type : TXT")
    print("   - Name : resend._domainkey")
    print(f"   - Value : {dkim_value}")
    print("   - Cliquer 'Save'")
    
    input("\n‚è≥ Appuyez sur Entr√©e quand l'enregistrement DKIM est ajout√©...")

def verify_domain():
    """V√©rifier le domaine sur Resend"""
    print("\n‚úÖ V√©rification du domaine sur Resend...")
    webbrowser.open("https://resend.com/domains")
    
    print("\nüìã Instructions de v√©rification :")
    print("1. Cliquer 'Verify' √† c√¥t√© de votre domaine")
    print("2. Attendre 5-10 minutes")
    print("3. Le statut doit passer de 'Pending' √† 'Verified'")
    
    input("\n‚è≥ Appuyez sur Entr√©e quand le domaine est v√©rifi√©...")

def update_env_file(domain):
    """Mettre √† jour le fichier .env automatiquement"""
    print(f"\n‚öôÔ∏è  Mise √† jour automatique du fichier .env...")
    
    # Lire le fichier .env actuel
    env_content = ""
    if os.path.exists(".env"):
        with open(".env", "r") as f:
            env_content = f.read()
    
    # Remplacer la ligne RESEND_FROM_EMAIL
    lines = env_content.split("\n")
    new_lines = []
    
    for line in lines:
        if line.startswith("RESEND_FROM_EMAIL="):
            new_lines.append(f"RESEND_FROM_EMAIL=noreply@{domain}")
        else:
            new_lines.append(line)
    
    # √âcrire le nouveau contenu
    new_content = "\n".join(new_lines)
    
    with open(".env", "w") as f:
        f.write(new_content)
    
    print(f"‚úÖ Fichier .env mis √† jour avec : RESEND_FROM_EMAIL=noreply@{domain}")

def test_configuration():
    """Tester la configuration"""
    print("\nüß™ Test de la configuration...")
    
    # Importer et tester
    try:
        from app.email_service import email_service
        from app.database import get_db
        from app.models import User
        
        db = next(get_db())
        pierre = db.query(User).filter(User.email == "fautrel.pierre@gmail.com").first()
        
        if pierre:
            print(f"‚úÖ Test d'envoi √† Pierre ({pierre.email})...")
            
            success = email_service.send_absence_status_notification(
                user_email=pierre.email,
                user_name=f"{pierre.first_name} {pierre.last_name}",
                absence_type="vacances",
                status="approuve",
                admin_comment="Test de configuration automatique Netlify + Resend"
            )
            
            if success:
                print("üéâ Configuration r√©ussie ! Pierre devrait recevoir un email.")
            else:
                print("‚ùå √âchec de l'envoi. V√©rifiez la configuration.")
        else:
            print("‚ö†Ô∏è  Pierre non trouv√© dans la base de donn√©es")
            
    except Exception as e:
        print(f"‚ùå Erreur lors du test : {e}")

def main():
    """Configuration automatique compl√®te"""
    print("üöÄ Configuration automatique Netlify + Resend")
    print("=" * 60)
    print()
    print("Je vais vous guider automatiquement √† travers toutes les √©tapes.")
    print("Vous n'aurez qu'√† suivre les instructions et appuyer sur Entr√©e.")
    print()
    
    # √âtape 1 : Cr√©er un compte
    print("1Ô∏è‚É£  CR√âATION DU COMPTE NETLIFY")
    create_netlify_account()
    
    # √âtape 2 : D√©ployer le site
    print("\n2Ô∏è‚É£  D√âPLOIEMENT DU SITE")
    domain = deploy_site()
    
    if not domain:
        print("‚ùå Impossible de continuer sans domaine")
        return
    
    # √âtape 3 : Configurer DNS
    print("\n3Ô∏è‚É£  CONFIGURATION DNS")
    configure_dns(domain)
    
    # √âtape 4 : Ajouter sur Resend
    print("\n4Ô∏è‚É£  AJOUT SUR RESEND")
    dkim_value = add_to_resend(domain)
    
    # √âtape 5 : Ajouter DKIM
    print("\n5Ô∏è‚É£  AJOUT ENREGISTREMENT DKIM")
    add_dkim_record(domain, dkim_value)
    
    # √âtape 6 : V√©rifier
    print("\n6Ô∏è‚É£  V√âRIFICATION")
    verify_domain()
    
    # √âtape 7 : Mettre √† jour .env
    print("\n7Ô∏è‚É£  MISE √Ä JOUR CONFIGURATION")
    update_env_file(domain)
    
    # √âtape 8 : Tester
    print("\n8Ô∏è‚É£  TEST")
    test_configuration()
    
    print("\nüéâ Configuration termin√©e !")
    print(f"‚úÖ Domaine configur√© : {domain}")
    print("‚úÖ Pierre peut maintenant recevoir des notifications")
    print("‚úÖ Tous les utilisateurs peuvent recevoir des emails")
    print("\nüìß Testez maintenant avec une vraie demande d'absence !")

if __name__ == "__main__":
    main() 